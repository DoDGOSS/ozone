package owf.grails.test.integration.services

import spock.lang.Specification

import grails.gorm.transactions.Rollback
import grails.testing.mixin.integration.Integration

import org.springframework.beans.factory.annotation.Autowired

import owf.grails.test.integration.OwfSpecMixin
import owf.grails.test.integration.SecurityMixin

import ozone.owf.grails.domain.Person
import ozone.owf.grails.domain.Preference
import ozone.owf.grails.services.AdministrationService


@Integration
@Rollback
class AdministrationServiceSpec extends Specification implements OwfSpecMixin, SecurityMixin {

    @Autowired
    AdministrationService service

    Person admin1
    Person user1
    Person user2

    private void setupData() {
        admin1 = createAdmin('admin1')
        user1 = createUser('user1')
        user2 = createUser('user2')
    }

    /**
     * OWF-1087
     *
     * There was a 255 character limit on the field value. Turned this into a text field (clob in oracle)
     */
    void testAddBigJson() {
        given:
        setupData()
        loggedInAs admin1

        when:
        def pref = [
                checkedTargets : [admin1.id, user1.id, user2.id],
                isExtAjaxFormat: true,
                namespace      : 'com.company.widget',
                path           : 'name',
                value          : '{ "a" : "1234567890", "b" : "1234567890", "c" : "1234567890", "d" : "1234567890", "e" : "1234567890", "f" : "1234567890", "g" : "1234567890", "h" : "1234567890", "i" : "1234567890", "j" : "1234567890", "k" : "1234567890", "l" : "1234567890", "m" : "1234567890", "n" : "1234567890", "o" : "1234567890", "p" : "1234567890", "q" : "1234567890", "r" : "1234567890", "s" : "1234567890", "t" : "1234567890", "u" : "1234567890", "v" : "1234567890", "w" : "1234567890", "x" : "1234567890", "y" : "1234567890", "z" : "1234567890" }'
        ]

        service.clonePreference(pref)

        then:
        Preference.findByPath('name').namespace == 'com.company.widget'
    }

    /**
     * OWF-1087
     *
     * There was a 255 character limit on the field value. Turned this into a text field (clob in oracle)
     */
    void testEditPreferenceWithLargeValue() {
        given:
        setupData()
        loggedInAs admin1

        and:
        def pref = [
                checkedTargets : [admin1.id, user1.id, user2.id],
                isExtAjaxFormat: true,
                namespace      : 'com.company.widget',
                path           : 'name',
                value          : 'test'
        ]
        service.clonePreference(pref)

        when:
        def updatedPref = [
                userid           : admin1.id,
                isExtAjaxFormat  : true,
                namespace        : 'com.company.widget2',
                originalNamespace: 'com.company.widget',
                path             : 'name2',
                originalPath     : 'name',
                value            : '12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
        ]
        service.updatePreference(updatedPref)

        then:
        Preference.findByPath('name2').namespace == 'com.company.widget2'
    }

}
