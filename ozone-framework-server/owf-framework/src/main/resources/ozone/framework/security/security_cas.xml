<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.3.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.2.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <context:property-placeholder system-properties-mode="OVERRIDE"
                                  properties-ref="env"/>

    <util:properties id="env">
        <prop key="cas.service.host">http://localhost:8080</prop>
        <prop key="cas.service.loginUrl">/login/cas</prop>
        <prop key="cas.service.proxyUrl">/login/cas/receptor</prop>
        <prop key="cas.service.successUrl">/</prop>
        <prop key="cas.service.failureUrl">/login?error=1</prop>

        <prop key="cas.server.host">http://localhost:80</prop>
        <prop key="cas.server.prefixUrl">/cas</prop>
        <prop key="cas.server.loginUrl">/cas/login</prop>
    </util:properties>

    <import resource="beans/common.xml"/>
    <import resource="beans/user-service.xml"/>
    <import resource="beans/user-cache.xml"/>

    <bean id="casProxyGrantingTicketStorage"
          class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl"/>

    <bean id="casTicketValidator"
          class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
        <constructor-arg value="http://localhost/cas"/>
        <!--        <property name="proxyCallbackUrl" value="${cas.service.host}${cas.service.proxyUrl}"/>-->
        <!--        <property name="proxyGrantingTicketStorage" ref="casProxyGrantingTicketStorage"/>-->
    </bean>

    <bean id="casServiceProperties"
          class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="http://localhost:8080/login/cas"/>
        <property name="sendRenew" value="false"/>
    </bean>

    <bean id="casAuthEntryPoint"
          class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="serviceProperties" ref="casServiceProperties"/>
        <property name="loginUrl" value="http://localhost/cas/login"/>
    </bean>

    <bean id="casAuthProvider"
          class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="authenticationUserDetailsService">
            <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <constructor-arg ref="userService" />
            </bean>
        </property>
        <property name="serviceProperties" ref="casServiceProperties"/>
        <property name="ticketValidator" ref="casTicketValidator"/>
        <property name="key" value="an_id_for_this_auth_provider_only"/>
    </bean>

    <!-- Authentication manager must be defined using 'id' and not 'ref' -->
    <sec:authentication-manager id="authenticationManager">
        <sec:authentication-provider ref="casAuthProvider"/>
    </sec:authentication-manager>

    <bean id="casAuthFilter"
          class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="filterProcessesUrl" value="/login/cas" />
        <!--        <property name="authenticationSuccessHandler">-->
        <!--            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">-->
        <!--                <property name="defaultTargetUrl" value="${cas.service.successUrl}" />-->
        <!--            </bean>-->
        <!--        </property>-->
        <!--        <property name="authenticationFailureHandler">-->
        <!--            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">-->
        <!--                <property name="defaultFailureUrl" value="${cas.service.failureUrl}"/>-->
        <!--            </bean>-->
        <!--        </property>-->

        <!--        <property name="proxyReceptorUrl" value="${cas.service.proxyUrl}}"/>-->
        <!--        <property name="proxyGrantingTicketStorage" ref="casProxyGrantingTicketStorage"/>-->
    </bean>

    <!--    <bean id="casSingleSignOutFilter"-->
    <!--          class="org.jasig.cas.client.session.SingleSignOutFilter"/>-->

    <!--    <bean id="casSingleSignOutHttpSessionListener"-->
    <!--          class="org.jasig.cas.client.session.SingleSignOutHttpSessionListener" />-->

    <!--    <bean id="requestSingleLogoutFilter"-->
    <!--          class="org.springframework.security.web.authentication.logout.LogoutFilter">-->
    <!--        <constructor-arg value="http://localhost/cas/logout"/>-->
    <!--        <constructor-arg>-->
    <!--            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>-->
    <!--        </constructor-arg>-->
    <!--        <property name="filterProcessesUrl" value="/logout/cas"/>-->
    <!--    </bean>-->

    <sec:http realm="OZONE"
              authentication-manager-ref="authenticationManager"
              entry-point-ref="casAuthEntryPoint">

        <sec:port-mappings>
            <sec:port-mapping http="8080" https="8443"/>
        </sec:port-mappings>

        <!-- CSRF protection must be disabled (enabled by default) to allow POST (& PATCH, PUT, DELETE) requests,
                as the client does not currently support CSRF tokens. -->
        <sec:csrf disabled="true"/>

        <!-- Set the 'X-Frame-Options' header (defaults to DENY) to allow widgets to run in iframes -->
        <sec:headers>
            <sec:frame-options policy="SAMEORIGIN"/>
        </sec:headers>

        <sec:custom-filter ref="ozoneCookieFilter" before="ANONYMOUS_FILTER"/>
        <sec:custom-filter ref="casAuthFilter" position="CAS_FILTER"/>

        <sec:intercept-url pattern="/static/**"
                           access="permitAll()"/>

        <sec:intercept-url pattern="/login/cas**"
                           access="permitAll()" />

        <sec:intercept-url pattern="/**"
                           access="hasAnyRole('ADMIN', 'USER', 'ORG_STEWARD')" />

    </sec:http>

</beans>
