# Generated by Django 2.2.1 on 2019-12-03 01:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('widgets', '0001_initial'),
        ('sessions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('version', models.BigIntegerField(default=0)),
                ('enabled', models.BooleanField(default=True)),
                ('user_real_name', models.CharField(max_length=200)),
                ('username', models.CharField(max_length=200, unique=True)),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('email_show', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('prev_login', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('last_notification', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('requires_sync', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'person',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('person_authorities_id', models.BigIntegerField(blank=True, null=True)),
                ('role_id', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person_role',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonWidgetDefinition',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('version', models.BigIntegerField(blank=True, default=0)),
                ('visible', models.BooleanField(default=True)),
                ('pwd_position', models.IntegerField(blank=True, null=True)),
                ('group_widget', models.BooleanField(blank=True, default=False, null=True)),
                ('favorite', models.BooleanField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=256, null=True)),
                ('disabled', models.BooleanField(blank=True, null=True)),
                ('user_widget', models.BooleanField(blank=True, default=True, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('widget_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='widgets.WidgetDefinition')),
            ],
            options={
                'db_table': 'person_widget_definition',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PersonSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sessions.Session')),
            ],
        ),
        migrations.AddConstraint(
            model_name='personwidgetdefinition',
            constraint=models.UniqueConstraint(fields=('person', 'widget_definition'), name='unique_person_widget_definition'),
        ),
    ]
