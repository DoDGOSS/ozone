include::../../_variables.asciidoc[]

= Using SQL Server

. Create a new SQL Server database for use with OWF.

. Create a SQL Server user with full access to the OWF database created above.

. OWF does not provide a JDBC driver for SQL Server. Obtain the appropriate JDBC driver and place it on the Web server's classpath. For example, if running Tomcat, the driver can be placed in the `{path-classpath}/` directory.

. Open the `{path-app-yml}` file and modify the environments.production.dataSource section using the values that are appropriate for the OWF environment.
+
[source,yaml]
.Example: application.yml
----
dataSource:
    pooled: true
    dbCreate: "none"
    username: "owf_user"
    password: "owf"
    driverClassName: "net.sourceforge.jtds.jdbc.Driver"
    url: "jdbc:jtds:sqlserver://localhost:1443/OWF"
    dialect: "ozone.owf.hibernate.OWFSQLServerDialect"
    properties:
        minEvictableIdleTimeMillis: 180000
        timeBetweenEvictionRunsMillis: 180000
        numTestsPerEvictionRun: 3
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: true
        validationQuery: "SELECT 1"
----
+
In the example above the SQL Server database user named `owf_user` with password of `owf` is used, to access a database named `OWF`.

. Before starting OWF, run the following scripts to create the database schema: +
`/dbscripts/sqlserver/SQLServerCreate.sql`

. To load the initial sample data into the database:
.. Open Microsoft SQL Server Management Studio (or another database editing tool) and select File â†’ Open File

.. Navigate to `/dbscripts/archive/SQLServerPrefsUpdate_v7.0.0.sql` in the bundle. +
+
NOTE: This script should ONLY be run against an empty database as it will delete pre-existing data.

.. Select the OWF database, and execute the script.


[discrete]
===== Notes:

* Old versions of the SQL scripts are included under `/database/archive/`. These are included for convenience for people upgrading from older versions of OWF.
