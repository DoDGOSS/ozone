include::../_variables.asciidoc[]

[#installation]
= Installation

== Dependencies

Listed below are the dependencies for OWF:

* Java 8 or higher.
* A Relational Database Management System (RDBMS). OWF currently ships with an in-memory HyperSQL (HSQLDB) database for testing and development purposes, but it is expected that a live deployment will use a more robust RDBMS such as Oracle or MySQL.


== Supported Browsers

OWF is tested against the following browsers:

.Supported Browsers
|===
| Browser | Version(s)

| Internet Explorer | 11
| Edge | 44
| Chrome | 74
| Firefox | 60
|===


== Bundle Overview

=== Bundle Contents

The distribution of OWF consists of a ZIP file containing the necessary components to set up and run OWF in a development environment. The bundle contains the following:

* `dbscripts/` – SQL scripts to create the database schema and the initial data.
* `docs/` – Copies of the application documentation and guides.
* `drivers/` – Example database drivers.
* `tomcat/` – The pre-configured Tomcat container. Includes the custom `start.bat` and `start.sh` scripts.
* `tomcat/certs/` – Sample server and user certificates for SSL and certificate-based authentication
* `tomcat/conf/` – Tomcat configuration files.
* `tomcat/lib/` – Files to include in the Tomcat Java classpath.
* `tomcat/lib/config/` – Example OWF configuration files for the supported databases.
* `tomcat/lib/ozone/framework/` – Externalized OWF configuration files, including custom security configuration.
* `tomcat/webapps/owf.war` – The OWF web application WAR file.
* `owf-jboss-modules.zip` – Sample JBoss modules for deployment onto a JBoss container.


=== Running the Application

The following example shows how an administrator might copy, unzip and start Ozone from the bundle deployment on *nix operating systems, assuming the bundle is named `{file-bundle}`:

[subs="attributes"]
----
cp {file-bundle} /opt
cd /opt
unzip {file-bundle}
cd tomcat
./start.sh
----

The following example shows how an administrator might copy, unzip, and start OWF from the bundle on Windows operating systems, assuming the bundle is named `{file-bundle}`:

. Create a new directory (for example, `C:\owf\`) from where OWF will be run. This can be done via the Windows UI or a command prompt.
. Copy `{file-bundle}` to the new directory created in step 1.
. Right-click on `{file-bundle}` and select Open, Explore, or the command for the system's default zip/unzip program.
. Unzip/unpack the bundle into the new directory created in step 1.
. From a command-line, run `start.bat` from within the `C:\owf\tomcat\` directory.

The use of the bundled deployment archive provides all of the necessary mechanisms to deploy and run the Tomcat Web container on any Java 8+ enabled system.


== Default Installation

Running the OWF Bundle via the included Tomcat web server with the default values requires minimal installation and configuration. When using this standard configuration, OWF uses the default security module which provides a simple username and password login form for authentication.

The application uses a keystore and a truststore which are local to the installation. There is no need to install any certificates into the server's Java installation. However, the default certificates contained in the OWF Bundle only function for localhost communications. When accessed from a remote machine with a name that differs from localhost while using the included certificates, OWF will not function correctly. Accordingly, see the Server Certificate Creation and Installation section below for information about creating additional certificates.


== Custom Installation

OWF can be customized to run in a variety of environments.

To configure an external database, see <<database-setup>>.

To configure security settings or install a security module, see <<security>>.



